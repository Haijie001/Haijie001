{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6591\\u9A6C\\\\\\u524D\\u7AEFts\\\\\\u7535\\u5546\\u7F51\\u7AD9\\\\ecommerce-webapp\\\\src\\\\components\\\\navbar\\\\navbar.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\"; // 导入 Link 组件，用于在应用内创建导航链接\n\nimport { useState } from \"react\"; // 从 React 导入 useState 钩子，用于管理组件内部的状态\n// NavBar 组件：接收 onSearch 和 cartItemCount 作为 props\n// onSearch 是一个函数，用于处理搜索操作\n// cartItemCount 表示购物车中的商品数量\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = _ref => {\n  _s();\n\n  let {\n    onSearch,\n    cartItemCount\n  } = _ref;\n  const [searchQuery, setSearchQuery] = useState(''); // 定义 searchQuery 状态，用于存储搜索框中的输入内容\n  // handleSubmit 函数：当用户点击搜索按钮时触发\n\n  const handleSubmit = () => {\n    // 如果搜索框中有有效的输入内容（去掉空格后长度大于 0）\n    if (searchQuery.trim().length) {\n      onSearch(searchQuery.trim()); // 调用 onSearch 函数，将搜索关键字传递给父组件\n    }\n\n    setSearchQuery(''); // 清空搜索框\n  }; // 返回导航栏的 JSX 结构\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header py-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"link\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"brand\",\n              children: \"E-commerce\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"search\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-control\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: searchQuery,\n                  onChange: e => setSearchQuery(e.target.value) // 当输入框内容变化时更新 searchQuery 状态\n                  ,\n                  placeholder: \"Search products...\" // 提示用户输入搜索内容\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"search-btn\",\n                onClick: handleSubmit,\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/cart\",\n            className: \"link headerCart\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"cartImg\",\n              src: \"/cart.svg\",\n              alt: \"cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), \" \", cartItemCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cartCounter\",\n              children: cartItemCount <= 9 ? cartItemCount : \"9+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavBar, \"uixqA8hxOTN7LqZPWxVzG2fnyhQ=\");\n\n_c = NavBar;\nexport { NavBar }; // 导出 NavBar 组件\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["Link","useState","NavBar","onSearch","cartItemCount","searchQuery","setSearchQuery","handleSubmit","trim","length","e","target","value"],"sources":["D:/斑马/前端ts/电商网站/ecommerce-webapp/src/components/navbar/navbar.js"],"sourcesContent":["import { Link } from \"react-router-dom\"; // 导入 Link 组件，用于在应用内创建导航链接\nimport { useState } from \"react\"; // 从 React 导入 useState 钩子，用于管理组件内部的状态\n\n// NavBar 组件：接收 onSearch 和 cartItemCount 作为 props\n// onSearch 是一个函数，用于处理搜索操作\n// cartItemCount 表示购物车中的商品数量\nconst NavBar = ({ onSearch, cartItemCount }) => {\n    const [searchQuery, setSearchQuery] = useState(''); // 定义 searchQuery 状态，用于存储搜索框中的输入内容\n\n    // handleSubmit 函数：当用户点击搜索按钮时触发\n    const handleSubmit = () => {\n        // 如果搜索框中有有效的输入内容（去掉空格后长度大于 0）\n        if (searchQuery.trim().length) {\n            onSearch(searchQuery.trim()); // 调用 onSearch 函数，将搜索关键字传递给父组件\n        }\n        setSearchQuery(''); // 清空搜索框\n    };\n\n    // 返回导航栏的 JSX 结构\n    return (\n        <div className=\"wrapper\">\n            <header className=\"container\">\n                <div className=\"header py-2\">\n                    <div className=\"grid\">\n                        {/* 点击品牌名称时，使用 Link 组件跳转到主页 */}\n                        <Link to=\"/\" className=\"link\">\n                            <h1 className=\"brand\">E-commerce</h1> {/* 网站的品牌名称 */}\n                        </Link>\n                        <div className=\"formContainer\">\n                            {/* 搜索表单 */}\n                            <form className=\"search\">\n                                <div className=\"form-control\">\n                                    {/* 输入框用于输入搜索关键字，值绑定到 searchQuery 状态 */}\n                                    <input\n                                        type=\"text\"\n                                        value={searchQuery}\n                                        onChange={e => setSearchQuery(e.target.value)} // 当输入框内容变化时更新 searchQuery 状态\n                                        placeholder=\"Search products...\" // 提示用户输入搜索内容\n                                    />\n                                </div>\n                                {/* 搜索按钮，点击时触发 handleSubmit 函数 */}\n                                <button type=\"button\" className=\"search-btn\" onClick={handleSubmit}>\n                                    Search\n                                </button>\n                            </form>\n                        </div>\n                        {/* 购物车链接，点击时跳转到购物车页面 */}\n                        <Link to=\"/cart\" className=\"link headerCart\">\n                            <img className=\"cartImg\" src=\"/cart.svg\" alt=\"cart\" /> {/* 购物车图标 */}\n                            {/* 如果购物车中有商品，显示商品数量 */}\n                            {cartItemCount > 0 && (\n                                <div className=\"cartCounter\">\n                                    {/* 如果购物车商品数量小于等于 9，则显示具体数量；否则显示 \"9+\" */}\n                                    {cartItemCount <= 9 ? cartItemCount : \"9+\"}\n                                </div>\n                            )}\n                        </Link>\n                    </div>\n                </div>\n            </header>\n        </div>\n    );\n};\n\nexport { NavBar }; // 导出 NavBar 组件"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB,C,CAAyC;;AACzC,SAASC,QAAT,QAAyB,OAAzB,C,CAAkC;AAElC;AACA;AACA;;;;AACA,MAAMC,MAAM,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAAEC,QAAF;IAAYC;EAAZ,CAAgC;EAC5C,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C,CAD4C,CACQ;EAEpD;;EACA,MAAMM,YAAY,GAAG,MAAM;IACvB;IACA,IAAIF,WAAW,CAACG,IAAZ,GAAmBC,MAAvB,EAA+B;MAC3BN,QAAQ,CAACE,WAAW,CAACG,IAAZ,EAAD,CAAR,CAD2B,CACG;IACjC;;IACDF,cAAc,CAAC,EAAD,CAAd,CALuB,CAKH;EACvB,CAND,CAJ4C,CAY5C;;;EACA,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,uBACI;MAAQ,SAAS,EAAC,WAAlB;MAAA,uBACI;QAAK,SAAS,EAAC,aAAf;QAAA,uBACI;UAAK,SAAS,EAAC,MAAf;UAAA,wBAEI,QAAC,IAAD;YAAM,EAAE,EAAC,GAAT;YAAa,SAAS,EAAC,MAAvB;YAAA,wBACI;cAAI,SAAS,EAAC,OAAd;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAKI;YAAK,SAAS,EAAC,eAAf;YAAA,uBAEI;cAAM,SAAS,EAAC,QAAhB;cAAA,wBACI;gBAAK,SAAS,EAAC,cAAf;gBAAA,uBAEI;kBACI,IAAI,EAAC,MADT;kBAEI,KAAK,EAAED,WAFX;kBAGI,QAAQ,EAAEK,CAAC,IAAIJ,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAHjC,CAGmD;kBAHnD;kBAII,WAAW,EAAC,oBAJhB,CAIqC;;gBAJrC;kBAAA;kBAAA;kBAAA;gBAAA;cAFJ;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAWI;gBAAQ,IAAI,EAAC,QAAb;gBAAsB,SAAS,EAAC,YAAhC;gBAA6C,OAAO,EAAEL,YAAtD;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAXJ;YAAA;cAAA;cAAA;cAAA;YAAA;UAFJ;YAAA;YAAA;YAAA;UAAA,QALJ,eAwBI,QAAC,IAAD;YAAM,EAAE,EAAC,OAAT;YAAiB,SAAS,EAAC,iBAA3B;YAAA,wBACI;cAAK,SAAS,EAAC,SAAf;cAAyB,GAAG,EAAC,WAA7B;cAAyC,GAAG,EAAC;YAA7C;cAAA;cAAA;cAAA;YAAA,QADJ,OAGKH,aAAa,GAAG,CAAhB,iBACG;cAAK,SAAS,EAAC,aAAf;cAAA,UAEKA,aAAa,IAAI,CAAjB,GAAqBA,aAArB,GAAqC;YAF1C;cAAA;cAAA;cAAA;YAAA,QAJR;UAAA;YAAA;YAAA;YAAA;UAAA,QAxBJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA2CH,CAxDD;;GAAMF,M;;KAAAA,M;AA0DN,SAASA,MAAT,G,CAAmB"},"metadata":{},"sourceType":"module"}